# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'connect_commander.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import socket
from PyQt5 import QtCore, QtGui, QtWidgets
import binascii
#import mod_datpar as datpar
import time
from PyQt5.QtWidgets import QApplication
socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(490, 173)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(410, 60, 61, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 60, 61, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(30, 20, 81, 31))
        self.pushButton_4.setObjectName("pushButton_4")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(120, 20, 191, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(320, 20, 71, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(400, 20, 41, 31))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_4.setGeometry(QtCore.QRect(100, 60, 301, 31))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.listView = QtWidgets.QListView(self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(30, 100, 441, 31))
        self.listView.setObjectName("listView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 490, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        # 버튼 클릭
        self.pushButton_4.clicked.connect(self.button_event_conn)
        self.pushButton_2.clicked.connect(self.button_event_write)
        self.pushButton.clicked.connect(self.button_event_new)
        
    #buttion event 추가
    def button_event_conn(self):
        IP = self.lineEdit.text()
        port = int(self.lineEdit_2.text())
        nbyte = self.lineEdit_3.text()
        self.connect_to_server(IP,port)
        
    def button_event_write(self):
        savepath = self.lineEdit_4.text()
        print(savepath)
        
    def button_event_new(self):
        self.lineEdit_4.clear()
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "New"))
        self.pushButton_2.setText(_translate("MainWindow", "Write to"))
        self.pushButton_4.setText(_translate("MainWindow", "Connect to"))
    
    def connect_to_server(self, IP,port):
        socket.connect((IP, port))
        with open('GUI_TEST_1.txt','w') as test:
            start = time.perf_counter()
            while True:
                QApplication.processEvents()
                data = socket.recv(4096)
                hex_data = binascii.hexlify(data).decode('utf-8')
                end = time.perf_counter()
                print('echo msg:', len(hex_data))
                count = end-start
                print(round(count,4))
                test.write(hex_data)
                if count >=60:
                    socket.close()
                    break
        
    ##################################################
    
# =============================================================================
#     def buttion_event(self, MainWindow):
#         text1 = self.lineEdit.text()
#         text2 = self.lineEdit_2.text()
#         text3 = self.lineEdit_3.text()
#         return print(text1, text2, text3)
# =============================================================================

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
